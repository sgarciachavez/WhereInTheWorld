{"version":3,"sources":["images/moon-white.svg","images/mag-glass.svg","images/mag-glass_blk.svg","images/left-arrow.svg","images/left-arrow-blk.svg","Countries.js","Search.js","MainContainer.js","SearchContainer.js","Borders.js","CountryDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Countries","className","this","props","countries","map","country","to","pathname","search","alpha3Code","key","style","textDecoration","color","backgroundImage","flag","backgroundSize","overflow","backgroundRepeat","backgroundPosition","name","population","region","capital","Component","Search","state","handleChange","event","setState","target","value","doSearch","console","log","url","window","location","href","theme","localStorage","getItem","InputGroup","type","placeholder","onChange","Append","Button","variant","onClick","src","mglass_blk","mglass","alt","DropdownButton","id","title","Dropdown","Item","MainContainer","URLSearchParams","get","fields","fetch","then","res","json","data","catch","SearchContainer","Borders","borders","codes","join","undefined","getBorders","length","item","size","CountryDetails","code","currencies","languages","iso639_1","blk_arrow","arrow","nativeName","subregion","topLevelDomain","App","label","toggleTheme","updateState","document","documentElement","setAttribute","setItem","moonw","exact","path","render","Boolean","hostname","match","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d6638bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moon-white.74556d31.svg\";","module.exports = __webpack_public_path__ + \"static/media/mag-glass.6650aba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/mag-glass_blk.6f5fc00b.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.c5dfb360.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow-blk.fc68b46a.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass Countries extends Component{\n  render(){\n    \n    return(\n      <div className=\"card-container\">\n        {this.props.countries.map((country)=> (\n          <Link\n            to={{pathname: '/country/', search: `?code=${country.alpha3Code}`}}\n            key={country.alpha3Code} style={{ textDecoration: 'none', color: 'white' }}>\n          <div className=\"card\" >\n            <div className=\"flag\"\n            style={{\n              backgroundImage: `url(${country.flag})`,\n              backgroundSize: 'cover',\n              overflow: 'hidden',\n              backgroundRepeat  : 'no-repeat',\n              backgroundPosition: 'center',\n            }}></div>\n            <div className=\"summary\">\n              <p>{country.name}</p>\n              <p className=\"info\">\n                Population: {country.population}<br/>\n                Region: {country.region}<br/>\n                Capital: {country.capital}\n              </p>\n            </div>\n          </div>\n          </Link>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Countries\n","import React, { Component } from 'react';\nimport mglass from './images/mag-glass.svg';\nimport mglass_blk from './images/mag-glass_blk.svg';\nimport {DropdownButton, Dropdown, InputGroup} from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n//import { Link } from 'react-router-dom'\n\nclass Search extends Component{\n  state = {\n    search: \"\"\n  }\n  handleChange=(event) => {\n    this.setState({search:event.target.value})\n    \n  }\n\n  doSearch = () => { \n    console.log(\"do Search  \" + this.state.search);\n    let url = `./search/?name=${this.state.search}`;\n    window.location.href = url; \n  }\n\n  render(){\n    //let url = `/search/?name=${this.state.search}`;\n    let theme = localStorage.getItem( 'theme' );\n\n    return(\n      <div className=\"search-area\">\n         <div>\n           <InputGroup className=\"mb-3\">\n            <form >\n              <input type=\"text\"\n                  placeholder=\"Search for a country...\"\n                  className=\"search-string\"\n                  value={this.state.search}\n                  onChange={this.handleChange}/>\n              </form>\n               <InputGroup.Append>\n               <Button variant=\"outline-secondary\" onClick={this.doSearch} >\n                  <img src={theme === \"light\" ? mglass_blk : mglass } className=\"\" alt=\"magnifying glass\" />\n                </Button>\n\n               </InputGroup.Append>\n             </InputGroup>\n         </div>\n         <div>\n           <DropdownButton id=\"region-filter\" title=\"Filter by Region\" variant={theme}>\n             <Dropdown.Item href=\"./\">All Regions</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Africa\">Africa</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Americas\">Americas</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Asia\">Asia</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Europe\">Europe</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Oceania\">Oceania</Dropdown.Item>\n           </DropdownButton>\n         </div>\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import React, { Component } from 'react';\nimport Countries from './Countries.js'\nimport Search from './Search.js'\n\nclass MainContainer extends Component{\n  state = {\n       countries: []\n     }\n\n  componentDidMount() {\n        const searchParams = new URLSearchParams(window.location.search);\n        const region = searchParams.get('region');\n        const fields = \"?fields=name;population;region;capital;flag;alpha3Code\";\n\n        let url = 'https://restcountries.eu/rest/v2/all' + fields;\n        if(region !== null){\n          url = 'https://restcountries.eu/rest/v2/region/' + region + fields;\n        }\n\n        fetch(url)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ countries: data })\n        })\n        .catch(console.log)\n      }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <Search />\n        <Countries countries={this.state.countries}/>\n      </div>\n    )\n  }\n}\n\nexport default MainContainer\n","import React, { Component } from 'react';\nimport Countries from './Countries.js'\nimport Search from './Search.js'\n\nclass SearchContainer extends Component{\n  state = {\n       countries: []\n     }\n\n  componentDidMount() {\n        const searchParams = new URLSearchParams(window.location.search);\n        const name = searchParams.get('name');\n        const fields = \"?fields=name;population;region;capital;flag;alpha3Code\";\n\n        let url = 'https://restcountries.eu/rest/v2/all' + fields;\n        if(name !== null){\n          url = 'https://restcountries.eu/rest/v2/name/' + name + fields;\n        }\n        if(name !== \"\"){\n          fetch(url)\n          .then(res => res.json())\n          .then((data) => {\n            this.setState({ countries: data })\n          })\n          .catch(console.log)\n        }\n      }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <Search />\n        <Countries countries={this.state.countries}/>\n      </div>\n    )\n  }\n}\n\nexport default SearchContainer\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass Borders extends Component{\n  state = {\n       borders: [],\n       fetch: true\n     }\n\n     getBorders(){\n       if(this.state.fetch){\n         const url = \"https://restcountries.eu/rest/v2/alpha?codes=\" + this.props.codes.join(\";\")\n         fetch(url)\n         .then(res => res.json())\n         .then((data) => {\n           this.setState({ borders: data,fetch: false});\n         })\n         .catch(console.log)\n       }\n     }\n\n  render(){\n    const theme = localStorage.getItem( 'theme' );\n    if(this.props.codes !== undefined){\n      this.getBorders();\n    }\n\n    if(this.state.borders !== undefined && this.state.borders.length > 0 ){\n      this.borders = this.state.borders.map((item, key) =>{\n        let url = `./?code=${item.alpha3Code}`\n        return (\n          <Button variant={theme} key={item.alpha3Code} href={url} size=\"sm\" className=\"border-country\">\n            {item.name}\n          </Button>\n        )\n      });\n    }\n    return(\n      <div><strong>Border Countries:</strong> {this.borders}</div>\n    )\n  }\n}\nexport default Borders\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport arrow from './images/left-arrow.svg';\nimport blk_arrow from './images/left-arrow-blk.svg';\nimport Borders from './Borders.js'\n\nclass CountryDetails extends Component{\n  state = {\n       country: {}\n     }\n\n  componentDidMount() {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if(code !== null){\n      const fields = \"?fields=name;nativeName;population;region;subregion;capital;topLevelDomain;currencies;languages;borders;flag\";\n      let url = 'https://restcountries.eu/rest/v2/alpha/' + code + fields;\n\n      fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ country: data });\n      })\n      .catch(console.log)\n    }\n  }\n\n  render(){\n    const theme = localStorage.getItem( 'theme' );\n    if(this.state.country.currencies !== undefined){\n      this.currencies = this.state.country.currencies.map((item, key) =>\n            <li key={item.code}>{item.name}</li>\n          );\n    }\n\n    if(this.state.country.languages !== undefined){\n      this.languages = this.state.country.languages.map((item, key) =>\n            <li key={item.iso639_1}>{item.name}</li>\n          );\n    }\n\n    return(\n      <div className=\"details-container\">\n        <Link to='/'>\n          <Button variant={theme}>\n            <img src={theme === \"light\" ? blk_arrow : arrow} className=\"moonw\" alt=\"left arrow\" />\n            Back to all countries\n          </Button>\n        </Link>\n        <div className=\"country-info\">\n          <div className=\"flag-container\">\n            <img src={this.state.country.flag}  alt=\"left arrow\" className=\"responsive\"/>\n          </div>\n\n          <div className=\"info-container\">\n            <p><strong>{this.state.country.name}</strong></p>\n            <div className=\"specs-container\">\n                <div className=\"column\">\n                  <p className=\"info\">\n                    <strong>Native Name:</strong> {this.state.country.nativeName}<br/>\n                    <strong>Population:</strong> {this.state.country.population}<br/>\n                    <strong>Region:</strong> {this.state.country.region}<br/>\n                    <strong>Sub Region:</strong> {this.state.country.subregion}<br/>\n                    <strong>Capital:</strong> {this.state.country.capital}<br/>\n                    <strong>Top Level Domain:</strong> {this.state.country.topLevelDomain}\n                  </p>\n                </div>\n                <div className=\"column info\">\n                    <strong>Currencies:</strong> <ul>{this.currencies}</ul>\n                    <strong>Languages:</strong> <ul>{this.languages}</ul>\n                </div>\n            </div>\n            <Borders codes={this.state.country.borders}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CountryDetails\n","import React, { Component } from 'react';\nimport moonw from './images/moon-white.svg';\nimport MainContainer from './MainContainer.js'\nimport SearchContainer from './SearchContainer.js'\nimport CountryDetails from './CountryDetails.js'\nimport './style/App.css';\nimport { Route } from 'react-router-dom'\nimport { Button } from 'react-bootstrap';\n\n\nclass App extends Component {\n  state = {\n       theme: \"dark\",\n       label: \"Dark\"\n     }\n\n     toggleTheme = ()=> {\n         var theme = this.state.theme === \"dark\" ? \"light\" : \"dark\";\n         this.updateState(theme);\n      }\n\n      updateState = (theme) => {\n        if(theme === null){\n          theme = \"dark\";\n        }\n        this.setState({ theme: theme });\n        var label = theme === \"dark\" ? \"Dark\" : \"Light\";\n        this.setState({label: label});\n        document.documentElement.setAttribute(\"data-theme\", theme);\n        localStorage.setItem( 'theme', theme );\n      }\n\n      componentDidMount(){\n        this.updateState(localStorage.getItem( 'theme' ));\n      }\n\n     render(){\n\n       return (\n         <div className=\"main\">\n           <div className=\"title-container\">\n             <div className=\"title\">Where in the world?</div>\n             <div className=\"mode\">\n               <img src={moonw} className=\"moonw\" alt=\"moon\" />\n               <Button className=\"mode-button\"\n                  variant={this.state.theme} onClick={this.toggleTheme}>\n                 {this.state.label} Mode\n               </Button>\n             </div>\n           </div>\n           <Route exact path='/' render={() =>\n               <MainContainer />\n           }/>\n\n           <Route exact path='/country' render={() =>\n               <CountryDetails />\n           }/>\n\n           <Route path='/search' render={() =>\n               <SearchContainer />\n           }/>\n\n         </div>\n       )\n     }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='/WhereInTheWorld'>\n    <App />\n  </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}