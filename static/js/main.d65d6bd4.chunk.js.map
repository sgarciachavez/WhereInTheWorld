{"version":3,"sources":["images/moon-white.svg","images/mag-glass.svg","images/mag-glass_blk.svg","images/left-arrow.svg","images/left-arrow-blk.svg","Countries.js","Search.js","MainContainer.js","SearchContainer.js","Borders.js","CountryDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Countries","className","this","props","countries","map","country","to","pathname","search","alpha3Code","key","style","textDecoration","color","backgroundImage","flag","backgroundSize","overflow","backgroundRepeat","backgroundPosition","name","population","region","capital","Component","Search","state","handleChange","event","setState","target","value","url","theme","localStorage","getItem","InputGroup","type","placeholder","onChange","Append","src","mglass_blk","mglass","alt","DropdownButton","id","title","variant","Dropdown","Item","href","MainContainer","URLSearchParams","window","location","get","fields","fetch","then","res","json","data","catch","console","log","SearchContainer","Borders","borders","codes","join","undefined","getBorders","length","item","Button","size","CountryDetails","code","currencies","languages","iso639_1","blk_arrow","arrow","nativeName","subregion","topLevelDomain","App","label","toggleTheme","updateState","document","documentElement","setAttribute","setItem","moonw","onClick","exact","path","render","Boolean","hostname","match","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d65d6bd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moon-white.74556d31.svg\";","module.exports = __webpack_public_path__ + \"static/media/mag-glass.6650aba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/mag-glass_blk.6f5fc00b.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.c5dfb360.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow-blk.fc68b46a.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass Countries extends Component{\n  render(){\n    \n    return(\n      <div className=\"card-container\">\n        {this.props.countries.map((country)=> (\n          <Link\n            to={{pathname: '/country/', search: `?code=${country.alpha3Code}`}}\n            key={country.alpha3Code} style={{ textDecoration: 'none', color: 'white' }}>\n          <div className=\"card\" >\n            <div className=\"flag\"\n            style={{\n              backgroundImage: `url(${country.flag})`,\n              backgroundSize: 'cover',\n              overflow: 'hidden',\n              backgroundRepeat  : 'no-repeat',\n              backgroundPosition: 'center',\n            }}></div>\n            <div className=\"summary\">\n              <p>{country.name}</p>\n              <p className=\"info\">\n                Population: {country.population}<br/>\n                Region: {country.region}<br/>\n                Capital: {country.capital}\n              </p>\n            </div>\n          </div>\n          </Link>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Countries\n","import React, { Component } from 'react';\nimport mglass from './images/mag-glass.svg';\nimport mglass_blk from './images/mag-glass_blk.svg';\nimport {DropdownButton, Dropdown, InputGroup} from 'react-bootstrap';\n//import { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\n\nclass Search extends Component{\n  state = {\n    search: \"\"\n  }\n  handleChange=(event) => {\n    this.setState({search:event.target.value})\n  }\n\n  render(){\n    let url = `./search/?name=${this.state.search}`;\n    let theme = localStorage.getItem( 'theme' );\n\n    return(\n      <div className=\"search-area\">\n         <div>\n           <InputGroup className=\"mb-3\">\n            <form >\n              <input type=\"text\"\n                  placeholder=\"Search for a country...\"\n                  className=\"search-string\"\n                  value={this.state.search}\n                  onChange={this.handleChange}/>\n              </form>\n               <InputGroup.Append>\n                <Link to={url}>\n                  <img src={theme === \"light\" ? mglass_blk : mglass } className=\"\" alt=\"magnifying glass\" />\n                </Link>\n               </InputGroup.Append>\n             </InputGroup>\n         </div>\n         <div>\n           <DropdownButton id=\"region-filter\" title=\"Filter by Region\" variant={theme}>\n             <Dropdown.Item href=\"./\">All Regions</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Africa\">Africa</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Americas\">Americas</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Asia\">Asia</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Europe\">Europe</Dropdown.Item>\n             <Dropdown.Item href=\"./?region=Oceania\">Oceania</Dropdown.Item>\n           </DropdownButton>\n         </div>\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import React, { Component } from 'react';\nimport Countries from './Countries.js'\nimport Search from './Search.js'\n\nclass MainContainer extends Component{\n  state = {\n       countries: []\n     }\n\n  componentDidMount() {\n        const searchParams = new URLSearchParams(window.location.search);\n        const region = searchParams.get('region');\n        const fields = \"?fields=name;population;region;capital;flag;alpha3Code\";\n\n        let url = 'https://restcountries.eu/rest/v2/all' + fields;\n        if(region !== null){\n          url = 'https://restcountries.eu/rest/v2/region/' + region + fields;\n        }\n\n        fetch(url)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ countries: data })\n        })\n        .catch(console.log)\n      }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <Search />\n        <Countries countries={this.state.countries}/>\n      </div>\n    )\n  }\n}\n\nexport default MainContainer\n","import React, { Component } from 'react';\nimport Countries from './Countries.js'\nimport Search from './Search.js'\n\nclass SearchContainer extends Component{\n  state = {\n       countries: []\n     }\n\n  componentDidMount() {\n        const searchParams = new URLSearchParams(window.location.search);\n        const name = searchParams.get('name');\n        const fields = \"?fields=name;population;region;capital;flag;alpha3Code\";\n\n        let url = 'https://restcountries.eu/rest/v2/all' + fields;\n        if(name !== null){\n          url = 'https://restcountries.eu/rest/v2/name/' + name + fields;\n        }\n        if(name !== \"\"){\n          fetch(url)\n          .then(res => res.json())\n          .then((data) => {\n            this.setState({ countries: data })\n          })\n          .catch(console.log)\n        }\n      }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <Search />\n        <Countries countries={this.state.countries}/>\n      </div>\n    )\n  }\n}\n\nexport default SearchContainer\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass Borders extends Component{\n  state = {\n       borders: [],\n       fetch: true\n     }\n\n     getBorders(){\n       if(this.state.fetch){\n         const url = \"https://restcountries.eu/rest/v2/alpha?codes=\" + this.props.codes.join(\";\")\n         fetch(url)\n         .then(res => res.json())\n         .then((data) => {\n           this.setState({ borders: data,fetch: false});\n         })\n         .catch(console.log)\n       }\n     }\n\n  render(){\n    const theme = localStorage.getItem( 'theme' );\n    if(this.props.codes !== undefined){\n      this.getBorders();\n    }\n\n    if(this.state.borders !== undefined && this.state.borders.length > 0 ){\n      this.borders = this.state.borders.map((item, key) =>{\n        let url = `./?code=${item.alpha3Code}`\n        return (\n          <Button variant={theme} key={item.alpha3Code} href={url} size=\"sm\" className=\"border-country\">\n            {item.name}\n          </Button>\n        )\n      });\n    }\n    return(\n      <div><strong>Border Countries:</strong> {this.borders}</div>\n    )\n  }\n}\nexport default Borders\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport arrow from './images/left-arrow.svg';\nimport blk_arrow from './images/left-arrow-blk.svg';\nimport Borders from './Borders.js'\n\nclass CountryDetails extends Component{\n  state = {\n       country: {}\n     }\n\n  componentDidMount() {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if(code !== null){\n      const fields = \"?fields=name;nativeName;population;region;subregion;capital;topLevelDomain;currencies;languages;borders;flag\";\n      let url = 'https://restcountries.eu/rest/v2/alpha/' + code + fields;\n\n      fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ country: data });\n      })\n      .catch(console.log)\n    }\n  }\n\n  render(){\n    const theme = localStorage.getItem( 'theme' );\n    if(this.state.country.currencies !== undefined){\n      this.currencies = this.state.country.currencies.map((item, key) =>\n            <li key={item.code}>{item.name}</li>\n          );\n    }\n\n    if(this.state.country.languages !== undefined){\n      this.languages = this.state.country.languages.map((item, key) =>\n            <li key={item.iso639_1}>{item.name}</li>\n          );\n    }\n\n    return(\n      <div className=\"details-container\">\n        <Link to='/'>\n          <Button variant={theme}>\n            <img src={theme === \"light\" ? blk_arrow : arrow} className=\"moonw\" alt=\"left arrow\" />\n            Back to all countries\n          </Button>\n        </Link>\n        <div className=\"country-info\">\n          <div className=\"flag-container\">\n            <img src={this.state.country.flag}  alt=\"left arrow\" className=\"responsive\"/>\n          </div>\n\n          <div className=\"info-container\">\n            <p><strong>{this.state.country.name}</strong></p>\n            <div className=\"specs-container\">\n                <div className=\"column\">\n                  <p className=\"info\">\n                    <strong>Native Name:</strong> {this.state.country.nativeName}<br/>\n                    <strong>Population:</strong> {this.state.country.population}<br/>\n                    <strong>Region:</strong> {this.state.country.region}<br/>\n                    <strong>Sub Region:</strong> {this.state.country.subregion}<br/>\n                    <strong>Capital:</strong> {this.state.country.capital}<br/>\n                    <strong>Top Level Domain:</strong> {this.state.country.topLevelDomain}\n                  </p>\n                </div>\n                <div className=\"column info\">\n                    <strong>Currencies:</strong> <ul>{this.currencies}</ul>\n                    <strong>Languages:</strong> <ul>{this.languages}</ul>\n                </div>\n            </div>\n            <Borders codes={this.state.country.borders}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CountryDetails\n","import React, { Component } from 'react';\nimport moonw from './images/moon-white.svg';\nimport MainContainer from './MainContainer.js'\nimport SearchContainer from './SearchContainer.js'\nimport CountryDetails from './CountryDetails.js'\nimport './style/App.css';\nimport { Route } from 'react-router-dom'\nimport { Button } from 'react-bootstrap';\n\n\nclass App extends Component {\n  state = {\n       theme: \"dark\",\n       label: \"Dark\"\n     }\n\n     toggleTheme = ()=> {\n         var theme = this.state.theme === \"dark\" ? \"light\" : \"dark\";\n         this.updateState(theme);\n      }\n\n      updateState = (theme) => {\n        if(theme === null){\n          theme = \"dark\";\n        }\n        this.setState({ theme: theme });\n        var label = theme === \"dark\" ? \"Dark\" : \"Light\";\n        this.setState({label: label});\n        document.documentElement.setAttribute(\"data-theme\", theme);\n        localStorage.setItem( 'theme', theme );\n      }\n\n      componentDidMount(){\n        this.updateState(localStorage.getItem( 'theme' ));\n      }\n\n     render(){\n\n       return (\n         <div className=\"main\">\n           <div className=\"title-container\">\n             <div className=\"title\">Where in the world?</div>\n             <div className=\"mode\">\n               <img src={moonw} className=\"moonw\" alt=\"moon\" />\n               <Button className=\"mode-button\"\n                  variant={this.state.theme} onClick={this.toggleTheme}>\n                 {this.state.label} Mode\n               </Button>\n             </div>\n           </div>\n           <Route exact path='/' render={() =>\n               <MainContainer />\n           }/>\n\n           <Route exact path='/country' render={() =>\n               <CountryDetails />\n           }/>\n\n           <Route path='/search' render={() =>\n               <SearchContainer />\n           }/>\n\n         </div>\n       )\n     }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='/WhereInTheWorld'>\n    <App />\n  </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}